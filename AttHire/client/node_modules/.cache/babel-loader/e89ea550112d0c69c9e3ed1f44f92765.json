{"ast":null,"code":"import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const finalStore = () => configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["D:/you/client/src/redux/store.js"],"names":["configureStore","combineReducers","getDefaultMiddleware","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","persistedReducer","finalStore","reducer","middleware","serializableCheck","ignoredActions","persistor","store"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,EAA0CC,oBAA1C,QAAsE,kBAAtE;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAMA,MAAMI,WAAW,GAAGhB,eAAe,CAAC;AAAEiB,EAAAA,IAAI,EAAEd,WAAR;AAAqBe,EAAAA,IAAI,EAAEhB;AAA3B,CAAD,CAAnC;AAEA,MAAMiB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AACA,OAAO,MAAMI,UAAU,GAAC,MAAKrB,cAAc,CAAC;AAC1CsB,EAAAA,OAAO,EAACF,gBADkC;AAE1CG,EAAAA,UAAU,EAAErB,oBAAD,IACXA,oBAAoB,CAAC;AACnBsB,IAAAA,iBAAiB,EAAC;AAChBC,MAAAA,cAAc,EAAC,CAAClB,KAAD,EAAOC,SAAP,EAAiBC,KAAjB,EAAuBC,OAAvB,EAA+BC,KAA/B,EAAqCC,QAArC;AADC;AADC,GAAD;AAHsB,CAAD,CAApC;AAYP,OAAO,IAAIc,SAAS,GAAGrB,YAAY,CAACsB,KAAD,CAA5B","sourcesContent":["import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userRedux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nexport const finalStore=()=> configureStore({\r\n  reducer:persistedReducer,\r\n  middleware:(getDefaultMiddleware)=>\r\n  getDefaultMiddleware({\r\n    serializableCheck:{\r\n      ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER],\r\n\r\n    },\r\n  }),\r\n})\r\n\r\n\r\nexport let persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}