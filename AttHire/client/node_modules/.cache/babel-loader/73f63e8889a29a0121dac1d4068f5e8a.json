{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess, logoutFailure, logoutStart, logoutSuccess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethods\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const logout = async (dispatch, user) => {\n  dispatch(logoutStart());\n\n  try {\n    const res = await publicRequest.get(\"/auth/logout\", user);\n    dispatch(logoutSuccess(res.data));\n  } catch (err) {\n    dispatch(logoutFailure());\n  }\n};","map":{"version":3,"sources":["D:/you/client/src/redux/apiCalls.js"],"names":["loginFailure","loginStart","loginSuccess","logoutFailure","logoutStart","logoutSuccess","publicRequest","login","dispatch","user","res","post","data","err","logout","get"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,EAAgDC,aAAhD,EAA+DC,WAA/D,EAA4EC,aAA5E,QAAiG,aAAjG;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAC7CD,EAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMS,GAAG,GAAG,MAAMJ,aAAa,CAACK,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACN,YAAY,CAACQ,GAAG,CAACE,IAAL,CAAb,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACD;AACF,CARM;AASP,OAAO,MAAMc,MAAM,GAAG,OAAON,QAAP,EAAiBC,IAAjB,KAA0B;AAC9CD,EAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMJ,aAAa,CAACS,GAAd,CAAkB,cAAlB,EAAkCN,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACH,aAAa,CAACK,GAAG,CAACE,IAAL,CAAd,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACD;AACF,CARM","sourcesContent":["import { loginFailure, loginStart, loginSuccess,logoutFailure, logoutStart, logoutSuccess } from \"./userRedux\";\r\nimport { publicRequest } from \"../requestMethods\";\r\n\r\nexport const login = async (dispatch, user) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await publicRequest.post(\"/auth/login\", user);\r\n    dispatch(loginSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(loginFailure());\r\n  }\r\n};\r\nexport const logout = async (dispatch, user) => {\r\n  dispatch(logoutStart());\r\n  try {\r\n    const res = await publicRequest.get(\"/auth/logout\", user);\r\n    dispatch(logoutSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(logoutFailure());\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}