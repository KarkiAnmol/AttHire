{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    registerStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    registerSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.push(action.payload);\n    },\n    registerFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerFailure,\n  registerSuccess,\n  registerStart\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/you/client/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","registerStart","registerSuccess","products","push","registerFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,UAAU,EAAE,KAFA;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACD,KAHO;AAIRK,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACD,KAPO;AAQRC,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAXO;AAYRQ,IAAAA,aAAa,EAAGL,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,KAAd;AACD,KAfO;AAgBRS,IAAAA,eAAe,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AAClCF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoBN,MAAM,CAACC,OAA3B;AACD,KAnBO;AAoBRM,IAAAA,eAAe,EAAGT,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD;AAvBO;AAPkB,CAAD,CAA7B;AAkCA,OAAO,MAAM;AAAEE,EAAAA,UAAF;AACVE,EAAAA,YADU;AAEVG,EAAAA,YAFU;AAGVK,EAAAA,eAHU;AAIVH,EAAAA,eAJU;AAKVD,EAAAA;AALU,IAMPb,SAAS,CAACkB,OANT;AAOP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    currentUser: null,\r\n    isFetching: false,\r\n    error: false,\r\n  },\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isFetching = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n    loginFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    registerStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    registerSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.products.push(action.payload);\r\n    },\r\n    registerFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginStart,\r\n   loginSuccess, \r\n   loginFailure, \r\n   registerFailure,\r\n   registerSuccess,\r\n   registerStart,\r\n  } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}