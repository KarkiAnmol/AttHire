{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, addProductStart, addProductFailure, addProductSuccess } from \"./cartRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n    window.alert(\"product added\");\n  } catch (err) {\n    dispatch(addProductFailure());\n    window.alert(\"product not added\");\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Final Project/AttHire/client/src/redux/apiCalls.js"],"names":["loginFailure","loginStart","loginSuccess","publicRequest","userRequest","deleteProductFailure","deleteProductStart","deleteProductSuccess","addProductStart","addProductFailure","addProductSuccess","login","dispatch","user","res","post","data","err","deleteProduct","id","addProduct","product","window","alert"],"mappings":"AAAA,SACEA,YADF,EAEEC,UAFF,EAGEC,YAHF,QAGsB,aAHtB;AAIA,SAASC,aAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AAEA,SACEC,oBADF,EAEEC,kBAFF,EAGEC,oBAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,iBANF,QAM0B,aAN1B;AAOA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAC7CD,EAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMa,GAAG,GAAG,MAAMX,aAAa,CAACY,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACV,YAAY,CAACY,GAAG,CAACE,IAAL,CAAb,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACZ,YAAY,EAAb,CAAR;AACD;AACF,CARM;AASP,OAAO,MAAMkB,aAAa,GAAG,OAAOC,EAAP,EAAWP,QAAX,KAAwB;AACnDA,EAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACF;AACAM,IAAAA,QAAQ,CAACL,oBAAoB,CAACY,EAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOF,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMe,UAAU,GAAG,OAAOC,OAAP,EAAgBT,QAAhB,KAA6B;AACrDA,EAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMV,WAAW,CAACW,IAAZ,CAAkB,WAAlB,EAA8BM,OAA9B,CAAlB;AACAT,IAAAA,QAAQ,CAACF,iBAAiB,CAACI,GAAG,CAACE,IAAL,CAAlB,CAAR;AACAM,IAAAA,MAAM,CAACC,KAAP,CAAa,eAAb;AACD,GAJD,CAIE,OAAON,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACAa,IAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AAED;AACF,CAXM","sourcesContent":["import { \r\n  loginFailure, \r\n  loginStart,\r\n  loginSuccess } from \"./userRedux\";\r\nimport { publicRequest,userRequest } from \"../requestMethods\";\r\n\r\nimport {\r\n  deleteProductFailure,\r\n  deleteProductStart,\r\n  deleteProductSuccess,\r\n  addProductStart,\r\n  addProductFailure,\r\n  addProductSuccess} from \"./cartRedux\"\r\nexport const login = async (dispatch, user) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await publicRequest.post(\"/auth/login\", user);\r\n    dispatch(loginSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(loginFailure());\r\n  }\r\n};\r\nexport const deleteProduct = async (id, dispatch) => {\r\n  dispatch(deleteProductStart());\r\n  try {\r\n    // const res = await userRequest.delete(`/products/${id}`);\r\n    dispatch(deleteProductSuccess(id));\r\n  } catch (err) {\r\n    dispatch(deleteProductFailure());\r\n  }\r\n};\r\n\r\nexport const addProduct = async (product, dispatch) => {\r\n  dispatch(addProductStart());\r\n  try {\r\n    const res = await userRequest.post(`/products`, product);\r\n    dispatch(addProductSuccess(res.data));\r\n    window.alert(\"product added\")\r\n  } catch (err) {\r\n    dispatch(addProductFailure());\r\n    window.alert(\"product not added\")\r\n\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}