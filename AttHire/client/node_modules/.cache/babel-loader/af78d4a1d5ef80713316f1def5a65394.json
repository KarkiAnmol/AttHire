{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n      state.total += action.payload.price * action.payload.quantity;\n    },\n    deleteProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteProductSuccess: (state, action) => {\n      state.quantity -= 1;\n      state.isFetching = false;\n      state.products.splice(state.products.findIndex(item => item._id === action.payload), 1);\n    },\n    deleteProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProductFailure,\n  deleteProductStart,\n  deleteProductSuccess\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["D:/aakriti/AttHire/client/src/redux/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","deleteProductStart","isFetching","error","deleteProductSuccess","splice","findIndex","item","_id","deleteProductFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,QAAQ,EAAE,CAFE;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACJ,QAAN,IAAkB,CAAlB;AACAI,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACAH,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD;AACD,KALO;AAMRS,IAAAA,kBAAkB,EAAGL,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACM,UAAN,GAAmB,IAAnB;AACAN,MAAAA,KAAK,CAACO,KAAN,GAAc,KAAd;AACD,KATO;AAURC,IAAAA,oBAAoB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,QAAN,IAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACM,UAAN,GAAmB,KAAnB;AACAN,MAAAA,KAAK,CAACL,QAAN,CAAec,MAAf,CACET,KAAK,CAACL,QAAN,CAAee,SAAf,CAA0BC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACE,OAAvD,CADF,EAEE,CAFF;AAID,KAjBO;AAkBRU,IAAAA,oBAAoB,EAAGb,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACM,UAAN,GAAmB,KAAnB;AACAN,MAAAA,KAAK,CAACO,KAAN,GAAc,IAAd;AACD;AArBO;AAPkB,CAAD,CAA7B;AAgCA,OAAO,MAAM;AAAER,EAAAA,UAAF;AAAac,EAAAA,oBAAb;AAAkCR,EAAAA,kBAAlC;AAAqDG,EAAAA;AAArD,IAA8EhB,SAAS,CAACsB,OAA9F;AACP,eAAetB,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    products: [],\r\n    quantity: 0,\r\n    total: 0,\r\n  },\r\n  reducers: {\r\n    addProduct: (state, action) => {\r\n      state.quantity += 1;\r\n      state.products.push(action.payload);\r\n      state.total += action.payload.price * action.payload.quantity;\r\n    },\r\n    deleteProductStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    deleteProductSuccess: (state, action) => {\r\n      state.quantity-=1;\r\n      state.isFetching = false;\r\n      state.products.splice(\r\n        state.products.findIndex((item) => item._id === action.payload),\r\n        1\r\n      );\r\n    },\r\n    deleteProductFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProduct,deleteProductFailure,deleteProductStart,deleteProductSuccess } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}